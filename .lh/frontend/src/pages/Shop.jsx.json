{
    "sourceFile": "frontend/src/pages/Shop.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1753273588641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753274193652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,13 +101,17 @@\n               className=\"w-full px-3 py-2 placeholder-gray-400 border rounded-lg focus:outline-none focus:ring focus:border-pink-300\"\r\n             />\r\n           </FilterSection>\r\n \r\n-          <div className=\"p-5 pt-0\">\r\n-            <button className=\"w-full border py-2 rounded\" onClick={handleReset}>\r\n-              Reset\r\n-            </button>\r\n-          </div>\r\n+         <div className=\"p-5 pt-0\">\r\n+  <button\r\n+    className=\"w-full border border-white text-white py-2 rounded hover:bg-white hover:text-black transition duration-200\"\r\n+    onClick={handleReset}\r\n+  >\r\n+    Reset\r\n+  </button>\r\n+</div>\r\n+\r\n         </aside>\r\n \r\n         {/* Products List */}\r\n         <main className=\"flex-1 p-3\">\r\n"
                }
            ],
            "date": 1753273588641,
            "name": "Commit-0",
            "content": "import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useGetFilteredProductsQuery } from \"../redux/api/productApiSlice\";\r\nimport { useFetchCategoriesQuery } from \"../redux/api/categoryApiSlice\";\r\nimport {\r\n  setCategories,\r\n  setProducts,\r\n  setChecked,\r\n} from \"../redux/features/shop/shopSlice\";\r\n\r\nimport Loader from \"../components/Loader\";\r\nimport ProductCard from \"./Products/ProductCard\";\r\n\r\nconst Shop = () => {\r\n  const dispatch = useDispatch();\r\n  const { categories, products, checked, radio } = useSelector(\r\n    (state) => state.shop\r\n  );\r\n\r\n  const { data: fetchedCategories = [], isLoading: categoriesLoading } = useFetchCategoriesQuery();\r\n  const { data: filteredProducts = [], isLoading: productsLoading } = useGetFilteredProductsQuery({\r\n    checked,\r\n    radio,\r\n  });\r\n\r\n  const [priceFilter, setPriceFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!categoriesLoading && fetchedCategories.length) {\r\n      dispatch(setCategories(fetchedCategories));\r\n    }\r\n  }, [fetchedCategories, categoriesLoading, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!productsLoading && filteredProducts.length) {\r\n      const filtered = filteredProducts.filter((product) =>\r\n        product.price.toString().includes(priceFilter)\r\n      );\r\n      dispatch(setProducts(filtered));\r\n    }\r\n  }, [checked, radio, filteredProducts, priceFilter, dispatch, productsLoading]);\r\n\r\n  const handleCategoryChange = (checkedState, id) => {\r\n    const updated = checkedState\r\n      ? [...checked, id]\r\n      : checked.filter((catId) => catId !== id);\r\n    dispatch(setChecked(updated));\r\n  };\r\n\r\n  const handleBrandFilter = (brand) => {\r\n    const brandFiltered = filteredProducts.filter((product) => product.brand === brand);\r\n    dispatch(setProducts(brandFiltered));\r\n  };\r\n\r\n  const handlePriceChange = (e) => {\r\n    setPriceFilter(e.target.value);\r\n  };\r\n\r\n  const uniqueBrands = [...new Set(filteredProducts.map((p) => p.brand).filter(Boolean))];\r\n\r\n  const handleReset = () => {\r\n    window.location.reload(); // or a more graceful reset using Redux state\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <div className=\"flex flex-col md:flex-row\">\r\n        {/* Sidebar Filters */}\r\n        <aside className=\"bg-[#151515] p-4 mt-2 mb-2 md:w-64\">\r\n          {/* Categories */}\r\n          <FilterSection title=\"Filter by Categories\">\r\n            {categories.map((category) => (\r\n              <CheckboxItem\r\n                key={category._id}\r\n                label={category.name}\r\n                id={category._id}\r\n                onChange={(e) => handleCategoryChange(e.target.checked, category._id)}\r\n              />\r\n            ))}\r\n          </FilterSection>\r\n\r\n          {/* Brands */}\r\n          <FilterSection title=\"Filter by Brands\">\r\n            {uniqueBrands.map((brand) => (\r\n              <RadioItem\r\n                key={brand}\r\n                label={brand}\r\n                name=\"brand\"\r\n                onChange={() => handleBrandFilter(brand)}\r\n              />\r\n            ))}\r\n          </FilterSection>\r\n\r\n          {/* Price */}\r\n          <FilterSection title=\"Filter by Price\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Price\"\r\n              value={priceFilter}\r\n              onChange={handlePriceChange}\r\n              className=\"w-full px-3 py-2 placeholder-gray-400 border rounded-lg focus:outline-none focus:ring focus:border-pink-300\"\r\n            />\r\n          </FilterSection>\r\n\r\n          <div className=\"p-5 pt-0\">\r\n            <button className=\"w-full border py-2 rounded\" onClick={handleReset}>\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </aside>\r\n\r\n        {/* Products List */}\r\n        <main className=\"flex-1 p-3\">\r\n          <h2 className=\"text-center text-lg font-semibold mb-2\">{products.length} Products</h2>\r\n          <div className=\"flex flex-wrap\">\r\n            {productsLoading ? (\r\n              <Loader />\r\n            ) : products.length > 0 ? (\r\n              products.map((product) => (\r\n                <div className=\"p-3\" key={product._id}>\r\n                  <ProductCard p={product} />\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p className=\"text-center w-full text-gray-400\">No products found.</p>\r\n            )}\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n\r\n/* --- Reusable UI Subcomponents --- */\r\n\r\nconst FilterSection = ({ title, children }) => (\r\n  <div className=\"mb-4\">\r\n    <h3 className=\"text-center py-2 bg-black rounded-full text-white font-semibold mb-2\">\r\n      {title}\r\n    </h3>\r\n    <div className=\"p-5\">{children}</div>\r\n  </div>\r\n);\r\n\r\nconst CheckboxItem = ({ label, id, onChange }) => (\r\n  <div className=\"flex items-center mb-2\">\r\n    <input\r\n      type=\"checkbox\"\r\n      id={`checkbox-${id}`}\r\n      onChange={onChange}\r\n      className=\"w-4 h-4 text-pink-600 bg-gray-100 border-gray-300 rounded focus:ring-pink-500\"\r\n    />\r\n    <label htmlFor={`checkbox-${id}`} className=\"ml-2 text-sm text-white\">\r\n      {label}\r\n    </label>\r\n  </div>\r\n);\r\n\r\nconst RadioItem = ({ label, name, onChange }) => (\r\n  <div className=\"flex items-center mb-3\">\r\n    <input\r\n      type=\"radio\"\r\n      id={`radio-${label}`}\r\n      name={name}\r\n      onChange={onChange}\r\n      className=\"w-4 h-4 text-pink-400 bg-gray-100 border-gray-300 focus:ring-pink-500\"\r\n    />\r\n    <label htmlFor={`radio-${label}`} className=\"ml-2 text-sm text-white\">\r\n      {label}\r\n    </label>\r\n  </div>\r\n);\r\n"
        }
    ]
}
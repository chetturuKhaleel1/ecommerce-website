{
    "sourceFile": "frontend/src/pages/Admin/AdminDashboard.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1750657746590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750657753162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,14 +115,14 @@\n             </h1>\r\n           </div>\r\n           <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n             <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n-              $\r\n+              ₹\r\n             </div>\r\n \r\n             <p className=\"mt-5\">All Orders</p>\r\n             <h1 className=\"text-xl font-bold\">\r\n-              $ {isLoading ? <Loader /> : orders?.totalOrders}\r\n+              ₹ {isLoading ? <Loader /> : orders?.totalOrders}\r\n             </h1>\r\n           </div>\r\n         </div>\r\n \r\n"
                },
                {
                    "date": 1753274625680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,11 @@\n import { useState, useEffect } from \"react\";\r\n import AdminMenu from \"./AdminMenu\";\r\n import OrderList from \"./OrderList\";\r\n import Loader from \"../../components/Loader\";\r\n+<h1 className=\"text-xl font-bold\">\r\n+  ₹ {isLoading ? <Loader /> : sales.totalSales.toFixed(2)}\r\n+</h1>\r\n \r\n const AdminDashboard = () => {\r\n   const { data: sales, isLoading } = useGetTotalSalesQuery();\r\n   const { data: customers, isLoading: loading } = useGetUsersQuery();\r\n"
                },
                {
                    "date": 1753274654324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,11 +9,8 @@\n import { useState, useEffect } from \"react\";\r\n import AdminMenu from \"./AdminMenu\";\r\n import OrderList from \"./OrderList\";\r\n import Loader from \"../../components/Loader\";\r\n-<h1 className=\"text-xl font-bold\">\r\n-  ₹ {isLoading ? <Loader /> : sales.totalSales.toFixed(2)}\r\n-</h1>\r\n \r\n const AdminDashboard = () => {\r\n   const { data: sales, isLoading } = useGetTotalSalesQuery();\r\n   const { data: customers, isLoading: loading } = useGetUsersQuery();\r\n@@ -102,11 +99,12 @@\n               ₹\r\n             </div>\r\n \r\n             <p className=\"mt-5\">Sales</p>\r\n-            <h1 className=\"text-xl font-bold\">\r\n-              ₹ {isLoading ? <Loader /> : sales.totalSales.toFixed(2)}\r\n-            </h1>\r\n+           <h1 className=\"text-xl font-bold text-white\">\r\n+  ₹ {isLoading ? <Loader /> : sales.totalSales.toFixed(2)}\r\n+</h1>\r\n+\r\n           </div>\r\n           <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n             <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n               ₹\r\n"
                },
                {
                    "date": 1753274675273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,146 @@\n+import Chart from 'react-apexcharts'\r\n+import { useGetUsersQuery } from \"../../redux/api/usersApiSlice\";\r\n+import {\r\n+  useGetTotalOrdersQuery,\r\n+  useGetTotalSalesByDateQuery,\r\n+  useGetTotalSalesQuery,\r\n+} from \"../../redux/api/orderApiSlice\";\r\n+\r\n+import { useState, useEffect } from \"react\";\r\n+import AdminMenu from \"./AdminMenu\";\r\n+import OrderList from \"./OrderList\";\r\n+import Loader from \"../../components/Loader\";\r\n+\r\n+const AdminDashboard = () => {\r\n+  const { data: sales, isLoading } = useGetTotalSalesQuery();\r\n+  const { data: customers, isLoading: loading } = useGetUsersQuery();\r\n+  const { data: orders, isLoading: loadingTwo } = useGetTotalOrdersQuery();\r\n+  const { data: salesDetail } = useGetTotalSalesByDateQuery();\r\n+\r\n+  const [state, setState] = useState({\r\n+    options: {\r\n+      chart: {\r\n+        type: \"line\",\r\n+      },\r\n+      tooltip: {\r\n+        theme: \"dark\",\r\n+      },\r\n+      colors: [\"#00E396\"],\r\n+      dataLabels: {\r\n+        enabled: true,\r\n+      },\r\n+      stroke: {\r\n+        curve: \"smooth\",\r\n+      },\r\n+      title: {\r\n+        text: \"Sales Trend\",\r\n+        align: \"left\",\r\n+      },\r\n+      grid: {\r\n+        borderColor: \"#ccc\",\r\n+      },\r\n+      markers: {\r\n+        size: 1,\r\n+      },\r\n+      xaxis: {\r\n+        categories: [],\r\n+        title: {\r\n+          text: \"Date\",\r\n+        },\r\n+      },\r\n+      yaxis: {\r\n+        title: {\r\n+          text: \"Sales\",\r\n+        },\r\n+        min: 0,\r\n+      },\r\n+      legend: {\r\n+        position: \"top\",\r\n+        horizontalAlign: \"right\",\r\n+        floating: true,\r\n+        offsetY: -25,\r\n+        offsetX: -5,\r\n+      },\r\n+    },\r\n+    series: [{ name: \"Sales\", data: [] }],\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (salesDetail) {\r\n+      const formattedSalesDate = salesDetail.map((item) => ({\r\n+        x: item._id,\r\n+        y: item.totalSales,\r\n+      }));\r\n+\r\n+      setState((prevState) => ({\r\n+        ...prevState,\r\n+        options: {\r\n+          ...prevState.options,\r\n+          xaxis: {\r\n+            categories: formattedSalesDate.map((item) => item.x),\r\n+          },\r\n+        },\r\n+\r\n+        series: [\r\n+          { name: \"Sales\", data: formattedSalesDate.map((item) => item.y) },\r\n+        ],\r\n+      }));\r\n+    }\r\n+  }, [salesDetail]);\r\n+\r\n+  return (\r\n+    <>\r\n+      <AdminMenu />\r\n+\r\n+      <section className=\"xl:ml-[4rem] md:ml-[0rem]\">\r\n+        <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n+  <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3 text-white\">\r\n+    ₹\r\n+  </div>\r\n+\r\n+  <p className=\"mt-5 text-white\">Sales</p>\r\n+  <h1 className=\"text-xl font-bold text-white\">\r\n+    ₹ {isLoading ? <Loader /> : sales.totalSales.toFixed(2)}\r\n+  </h1>\r\n+</div>\r\n+\r\n+          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n+            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n+              ₹\r\n+            </div>\r\n+\r\n+            <p className=\"mt-5\">Customers</p>\r\n+            <h1 className=\"text-xl font-bold\">\r\n+              ₹ {isLoading ? <Loader /> : customers?.length}\r\n+            </h1>\r\n+          </div>\r\n+          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n+            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n+              ₹\r\n+            </div>\r\n+\r\n+            <p className=\"mt-5\">All Orders</p>\r\n+            <h1 className=\"text-xl font-bold\">\r\n+              ₹ {isLoading ? <Loader /> : orders?.totalOrders}\r\n+            </h1>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <div className=\"ml-[10rem] mt-[4rem]\">\r\n+          <Chart\r\n+            options={state.options}\r\n+            series={state.series}\r\n+            type=\"bar\"\r\n+            width=\"70%\"\r\n+          />\r\n+        </div>\r\n+\r\n+        <div className=\"mt-[4rem]\">\r\n+          <OrderList />\r\n+        </div>\r\n+      </section>\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n+export default AdminDashboard;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753274680785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,147 @@\n+import Chart from 'react-apexcharts'\r\n+import { useGetUsersQuery } from \"../../redux/api/usersApiSlice\";\r\n+import {\r\n+  useGetTotalOrdersQuery,\r\n+  useGetTotalSalesByDateQuery,\r\n+  useGetTotalSalesQuery,\r\n+} from \"../../redux/api/orderApiSlice\";\r\n+\r\n+import { useState, useEffect } from \"react\";\r\n+import AdminMenu from \"./AdminMenu\";\r\n+import OrderList from \"./OrderList\";\r\n+import Loader from \"../../components/Loader\";\r\n+\r\n+const AdminDashboard = () => {\r\n+  const { data: sales, isLoading } = useGetTotalSalesQuery();\r\n+  const { data: customers, isLoading: loading } = useGetUsersQuery();\r\n+  const { data: orders, isLoading: loadingTwo } = useGetTotalOrdersQuery();\r\n+  const { data: salesDetail } = useGetTotalSalesByDateQuery();\r\n+\r\n+  const [state, setState] = useState({\r\n+    options: {\r\n+      chart: {\r\n+        type: \"line\",\r\n+      },\r\n+      tooltip: {\r\n+        theme: \"dark\",\r\n+      },\r\n+      colors: [\"#00E396\"],\r\n+      dataLabels: {\r\n+        enabled: true,\r\n+      },\r\n+      stroke: {\r\n+        curve: \"smooth\",\r\n+      },\r\n+      title: {\r\n+        text: \"Sales Trend\",\r\n+        align: \"left\",\r\n+      },\r\n+      grid: {\r\n+        borderColor: \"#ccc\",\r\n+      },\r\n+      markers: {\r\n+        size: 1,\r\n+      },\r\n+      xaxis: {\r\n+        categories: [],\r\n+        title: {\r\n+          text: \"Date\",\r\n+        },\r\n+      },\r\n+      yaxis: {\r\n+        title: {\r\n+          text: \"Sales\",\r\n+        },\r\n+        min: 0,\r\n+      },\r\n+      legend: {\r\n+        position: \"top\",\r\n+        horizontalAlign: \"right\",\r\n+        floating: true,\r\n+        offsetY: -25,\r\n+        offsetX: -5,\r\n+      },\r\n+    },\r\n+    series: [{ name: \"Sales\", data: [] }],\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (salesDetail) {\r\n+      const formattedSalesDate = salesDetail.map((item) => ({\r\n+        x: item._id,\r\n+        y: item.totalSales,\r\n+      }));\r\n+\r\n+      setState((prevState) => ({\r\n+        ...prevState,\r\n+        options: {\r\n+          ...prevState.options,\r\n+          xaxis: {\r\n+            categories: formattedSalesDate.map((item) => item.x),\r\n+          },\r\n+        },\r\n+\r\n+        series: [\r\n+          { name: \"Sales\", data: formattedSalesDate.map((item) => item.y) },\r\n+        ],\r\n+      }));\r\n+    }\r\n+  }, [salesDetail]);\r\n+\r\n+  return (\r\n+    <>\r\n+      <AdminMenu />\r\n+\r\n+      <section className=\"xl:ml-[4rem] md:ml-[0rem]\">\r\n+        <div className=\"w-[80%] flex justify-around flex-wrap\">\r\n+          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n+            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n+              ₹\r\n+            </div>\r\n+\r\n+            <p className=\"mt-5\">Sales</p>\r\n+           <h1 className=\"text-xl font-bold text-white\">\r\n+  ₹ {isLoading ? <Loader /> : sales.totalSales.toFixed(2)}\r\n+</h1>\r\n+\r\n+          </div>\r\n+          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n+            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n+              ₹\r\n+            </div>\r\n+\r\n+            <p className=\"mt-5\">Customers</p>\r\n+            <h1 className=\"text-xl font-bold\">\r\n+              ₹ {isLoading ? <Loader /> : customers?.length}\r\n+            </h1>\r\n+          </div>\r\n+          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n+            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n+              ₹\r\n+            </div>\r\n+\r\n+            <p className=\"mt-5\">All Orders</p>\r\n+            <h1 className=\"text-xl font-bold\">\r\n+              ₹ {isLoading ? <Loader /> : orders?.totalOrders}\r\n+            </h1>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <div className=\"ml-[10rem] mt-[4rem]\">\r\n+          <Chart\r\n+            options={state.options}\r\n+            series={state.series}\r\n+            type=\"bar\"\r\n+            width=\"70%\"\r\n+          />\r\n+        </div>\r\n+\r\n+        <div className=\"mt-[4rem]\">\r\n+          <OrderList />\r\n+        </div>\r\n+      </section>\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n+export default AdminDashboard;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753274818167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,138 @@\n+import { useEffect, useState } from \"react\";\r\n+import Chart from \"react-apexcharts\";\r\n+\r\n+import { useGetUsersQuery } from \"../../redux/api/usersApiSlice\";\r\n+import {\r\n+  useGetTotalOrdersQuery,\r\n+  useGetTotalSalesByDateQuery,\r\n+  useGetTotalSalesQuery,\r\n+} from \"../../redux/api/orderApiSlice\";\r\n+\r\n+import AdminMenu from \"./AdminMenu\";\r\n+import OrderList from \"./OrderList\";\r\n+import Loader from \"../../components/Loader\";\r\n+\r\n+const DashboardCard = ({ label, icon, value, loading }) => (\r\n+  <div className=\"rounded-lg bg-neutral-900 p-5 w-[20rem] mt-5 shadow\">\r\n+    <div className=\"font-bold rounded-full w-[3rem] h-[3rem] bg-pink-500 flex items-center justify-center text-white text-lg\">\r\n+      {icon}\r\n+    </div>\r\n+    <p className=\"mt-5 text-white\">{label}</p>\r\n+    <h1 className=\"text-xl font-bold text-white mt-1\">\r\n+      {loading ? <Loader /> : value}\r\n+    </h1>\r\n+  </div>\r\n+);\r\n+\r\n+const AdminDashboard = () => {\r\n+  const { data: sales, isLoading: loadingSales } = useGetTotalSalesQuery();\r\n+  const { data: customers, isLoading: loadingCustomers } = useGetUsersQuery();\r\n+  const { data: orders, isLoading: loadingOrders } = useGetTotalOrdersQuery();\r\n+  const { data: salesDetail } = useGetTotalSalesByDateQuery();\r\n+\r\n+  const [chartState, setChartState] = useState({\r\n+    options: {\r\n+      chart: { type: \"line\" },\r\n+      tooltip: { theme: \"dark\" },\r\n+      colors: [\"#00E396\"],\r\n+      dataLabels: { enabled: true },\r\n+      stroke: { curve: \"smooth\" },\r\n+      title: {\r\n+        text: \"Sales Trend\",\r\n+        align: \"left\",\r\n+        style: { color: \"#fff\" },\r\n+      },\r\n+      grid: { borderColor: \"#ccc\" },\r\n+      markers: { size: 1 },\r\n+      xaxis: {\r\n+        categories: [],\r\n+        title: { text: \"Date\", style: { color: \"#fff\" } },\r\n+        labels: { style: { colors: \"#fff\" } },\r\n+      },\r\n+      yaxis: {\r\n+        title: { text: \"Sales\", style: { color: \"#fff\" } },\r\n+        labels: { style: { colors: \"#fff\" } },\r\n+        min: 0,\r\n+      },\r\n+      legend: {\r\n+        labels: { colors: \"#fff\" },\r\n+        position: \"top\",\r\n+        horizontalAlign: \"right\",\r\n+        floating: true,\r\n+        offsetY: -25,\r\n+        offsetX: -5,\r\n+      },\r\n+    },\r\n+    series: [{ name: \"Sales\", data: [] }],\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (salesDetail) {\r\n+      const formatted = salesDetail.map((item) => ({\r\n+        x: item._id,\r\n+        y: item.totalSales,\r\n+      }));\r\n+\r\n+      setChartState((prev) => ({\r\n+        ...prev,\r\n+        options: {\r\n+          ...prev.options,\r\n+          xaxis: {\r\n+            ...prev.options.xaxis,\r\n+            categories: formatted.map((item) => item.x),\r\n+          },\r\n+        },\r\n+        series: [\r\n+          {\r\n+            name: \"Sales\",\r\n+            data: formatted.map((item) => item.y),\r\n+          },\r\n+        ],\r\n+      }));\r\n+    }\r\n+  }, [salesDetail]);\r\n+\r\n+  return (\r\n+    <>\r\n+      <AdminMenu />\r\n+\r\n+      <section className=\"xl:ml-[4rem] md:ml-[0rem]\">\r\n+        <div className=\"w-[80%] flex justify-around flex-wrap\">\r\n+          <DashboardCard\r\n+            label=\"Sales\"\r\n+            icon=\"₹\"\r\n+            value={`₹ ${sales?.totalSales?.toFixed(2) ?? \"0.00\"}`}\r\n+            loading={loadingSales}\r\n+          />\r\n+          <DashboardCard\r\n+            label=\"Customers\"\r\n+            icon=\"👥\"\r\n+            value={customers?.length ?? 0}\r\n+            loading={loadingCustomers}\r\n+          />\r\n+          <DashboardCard\r\n+            label=\"All Orders\"\r\n+            icon=\"📦\"\r\n+            value={orders?.totalOrders ?? 0}\r\n+            loading={loadingOrders}\r\n+          />\r\n+        </div>\r\n+\r\n+        <div className=\"ml-[10rem] mt-[4rem]\">\r\n+          <Chart\r\n+            options={chartState.options}\r\n+            series={chartState.series}\r\n+            type=\"bar\"\r\n+            width=\"70%\"\r\n+          />\r\n+        </div>\r\n+\r\n+        <div className=\"mt-[4rem]\">\r\n+          <OrderList />\r\n+        </div>\r\n+      </section>\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n+export default AdminDashboard;\r\n"
                },
                {
                    "date": 1753274853519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,147 @@\n+import Chart from 'react-apexcharts'\r\n+import { useGetUsersQuery } from \"../../redux/api/usersApiSlice\";\r\n+import {\r\n+  useGetTotalOrdersQuery,\r\n+  useGetTotalSalesByDateQuery,\r\n+  useGetTotalSalesQuery,\r\n+} from \"../../redux/api/orderApiSlice\";\r\n+\r\n+import { useState, useEffect } from \"react\";\r\n+import AdminMenu from \"./AdminMenu\";\r\n+import OrderList from \"./OrderList\";\r\n+import Loader from \"../../components/Loader\";\r\n+\r\n+const AdminDashboard = () => {\r\n+  const { data: sales, isLoading } = useGetTotalSalesQuery();\r\n+  const { data: customers, isLoading: loading } = useGetUsersQuery();\r\n+  const { data: orders, isLoading: loadingTwo } = useGetTotalOrdersQuery();\r\n+  const { data: salesDetail } = useGetTotalSalesByDateQuery();\r\n+\r\n+  const [state, setState] = useState({\r\n+    options: {\r\n+      chart: {\r\n+        type: \"line\",\r\n+      },\r\n+      tooltip: {\r\n+        theme: \"dark\",\r\n+      },\r\n+      colors: [\"#00E396\"],\r\n+      dataLabels: {\r\n+        enabled: true,\r\n+      },\r\n+      stroke: {\r\n+        curve: \"smooth\",\r\n+      },\r\n+      title: {\r\n+        text: \"Sales Trend\",\r\n+        align: \"left\",\r\n+      },\r\n+      grid: {\r\n+        borderColor: \"#ccc\",\r\n+      },\r\n+      markers: {\r\n+        size: 1,\r\n+      },\r\n+      xaxis: {\r\n+        categories: [],\r\n+        title: {\r\n+          text: \"Date\",\r\n+        },\r\n+      },\r\n+      yaxis: {\r\n+        title: {\r\n+          text: \"Sales\",\r\n+        },\r\n+        min: 0,\r\n+      },\r\n+      legend: {\r\n+        position: \"top\",\r\n+        horizontalAlign: \"right\",\r\n+        floating: true,\r\n+        offsetY: -25,\r\n+        offsetX: -5,\r\n+      },\r\n+    },\r\n+    series: [{ name: \"Sales\", data: [] }],\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (salesDetail) {\r\n+      const formattedSalesDate = salesDetail.map((item) => ({\r\n+        x: item._id,\r\n+        y: item.totalSales,\r\n+      }));\r\n+\r\n+      setState((prevState) => ({\r\n+        ...prevState,\r\n+        options: {\r\n+          ...prevState.options,\r\n+          xaxis: {\r\n+            categories: formattedSalesDate.map((item) => item.x),\r\n+          },\r\n+        },\r\n+\r\n+        series: [\r\n+          { name: \"Sales\", data: formattedSalesDate.map((item) => item.y) },\r\n+        ],\r\n+      }));\r\n+    }\r\n+  }, [salesDetail]);\r\n+\r\n+  return (\r\n+    <>\r\n+      <AdminMenu />\r\n+\r\n+      <section className=\"xl:ml-[4rem] md:ml-[0rem]\">\r\n+        <div className=\"w-[80%] flex justify-around flex-wrap\">\r\n+          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n+            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n+              ₹\r\n+            </div>\r\n+\r\n+            <p className=\"mt-5\">Sales</p>\r\n+           <h1 className=\"text-xl font-bold text-white\">\r\n+  ₹ {isLoading ? <Loader /> : sales.totalSales.toFixed(2)}\r\n+</h1>\r\n+\r\n+          </div>\r\n+          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n+            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n+              ₹\r\n+            </div>\r\n+\r\n+            <p className=\"mt-5\">Customers</p>\r\n+            <h1 className=\"text-xl font-bold\">\r\n+              ₹ {isLoading ? <Loader /> : customers?.length}\r\n+            </h1>\r\n+          </div>\r\n+          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n+            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n+              ₹\r\n+            </div>\r\n+\r\n+            <p className=\"mt-5\">All Orders</p>\r\n+            <h1 className=\"text-xl font-bold\">\r\n+              ₹ {isLoading ? <Loader /> : orders?.totalOrders}\r\n+            </h1>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <div className=\"ml-[10rem] mt-[4rem]\">\r\n+          <Chart\r\n+            options={state.options}\r\n+            series={state.series}\r\n+            type=\"bar\"\r\n+            width=\"70%\"\r\n+          />\r\n+        </div>\r\n+\r\n+        <div className=\"mt-[4rem]\">\r\n+          <OrderList />\r\n+        </div>\r\n+      </section>\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n+export default AdminDashboard;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753274892908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,147 @@\n+import Chart from 'react-apexcharts'\r\n+import { useGetUsersQuery } from \"../../redux/api/usersApiSlice\";\r\n+import {\r\n+  useGetTotalOrdersQuery,\r\n+  useGetTotalSalesByDateQuery,\r\n+  useGetTotalSalesQuery,\r\n+} from \"../../redux/api/orderApiSlice\";\r\n+\r\n+import { useState, useEffect } from \"react\";\r\n+import AdminMenu from \"./AdminMenu\";\r\n+import OrderList from \"./OrderList\";\r\n+import Loader from \"../../components/Loader\";\r\n+\r\n+const AdminDashboard = () => {\r\n+  const { data: sales, isLoading } = useGetTotalSalesQuery();\r\n+  const { data: customers, isLoading: loading } = useGetUsersQuery();\r\n+  const { data: orders, isLoading: loadingTwo } = useGetTotalOrdersQuery();\r\n+  const { data: salesDetail } = useGetTotalSalesByDateQuery();\r\n+\r\n+  const [state, setState] = useState({\r\n+    options: {\r\n+      chart: {\r\n+        type: \"line\",\r\n+      },\r\n+      tooltip: {\r\n+        theme: \"dark\",\r\n+      },\r\n+      colors: [\"#00E396\"],\r\n+      dataLabels: {\r\n+        enabled: true,\r\n+      },\r\n+      stroke: {\r\n+        curve: \"smooth\",\r\n+      },\r\n+      title: {\r\n+        text: \"Sales Trend\",\r\n+        align: \"left\",\r\n+      },\r\n+      grid: {\r\n+        borderColor: \"#ccc\",\r\n+      },\r\n+      markers: {\r\n+        size: 1,\r\n+      },\r\n+      xaxis: {\r\n+        categories: [],\r\n+        title: {\r\n+          text: \"Date\",\r\n+        },\r\n+      },\r\n+      yaxis: {\r\n+        title: {\r\n+          text: \"Sales\",\r\n+        },\r\n+        min: 0,\r\n+      },\r\n+      legend: {\r\n+        position: \"top\",\r\n+        horizontalAlign: \"right\",\r\n+        floating: true,\r\n+        offsetY: -25,\r\n+        offsetX: -5,\r\n+      },\r\n+    },\r\n+    series: [{ name: \"Sales\", data: [] }],\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (salesDetail) {\r\n+      const formattedSalesDate = salesDetail.map((item) => ({\r\n+        x: item._id,\r\n+        y: item.totalSales,\r\n+      }));\r\n+\r\n+      setState((prevState) => ({\r\n+        ...prevState,\r\n+        options: {\r\n+          ...prevState.options,\r\n+          xaxis: {\r\n+            categories: formattedSalesDate.map((item) => item.x),\r\n+          },\r\n+        },\r\n+\r\n+        series: [\r\n+          { name: \"Sales\", data: formattedSalesDate.map((item) => item.y) },\r\n+        ],\r\n+      }));\r\n+    }\r\n+  }, [salesDetail]);\r\n+\r\n+  return (\r\n+    <>\r\n+      <AdminMenu />\r\n+\r\n+      <section className=\"xl:ml-[4rem] md:ml-[0rem]\">\r\n+        <div className=\"w-[80%] flex justify-around flex-wrap\">\r\n+          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n+            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n+              ₹\r\n+            </div>\r\n+\r\n+            <p className=\"mt-5\">Sales</p>\r\n+           <h1 className=\"text-xl font-bold text-white\">\r\n+  ₹ {isLoading ? <Loader /> : sales.totalSales.toFixed(2)}\r\n+</h1>\r\n+\r\n+          </div>\r\n+          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5 text-white\">\r\n+            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n+              ₹\r\n+            </div>\r\n+\r\n+            <p className=\"mt-5\">Customers</p>\r\n+            <h1 className=\"text-xl font-bold\">\r\n+              ₹ {isLoading ? <Loader /> : customers?.length}\r\n+            </h1>\r\n+          </div>\r\n+          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n+            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n+              ₹\r\n+            </div>\r\n+\r\n+            <p className=\"mt-5\">All Orders</p>\r\n+            <h1 className=\"text-xl font-bold\">\r\n+              ₹ {isLoading ? <Loader /> : orders?.totalOrders}\r\n+            </h1>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <div className=\"ml-[10rem] mt-[4rem]\">\r\n+          <Chart\r\n+            options={state.options}\r\n+            series={state.series}\r\n+            type=\"bar\"\r\n+            width=\"70%\"\r\n+          />\r\n+        </div>\r\n+\r\n+        <div className=\"mt-[4rem]\">\r\n+          <OrderList />\r\n+        </div>\r\n+      </section>\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n+export default AdminDashboard;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753274913154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,147 @@\n+import Chart from 'react-apexcharts'\r\n+import { useGetUsersQuery } from \"../../redux/api/usersApiSlice\";\r\n+import {\r\n+  useGetTotalOrdersQuery,\r\n+  useGetTotalSalesByDateQuery,\r\n+  useGetTotalSalesQuery,\r\n+} from \"../../redux/api/orderApiSlice\";\r\n+\r\n+import { useState, useEffect } from \"react\";\r\n+import AdminMenu from \"./AdminMenu\";\r\n+import OrderList from \"./OrderList\";\r\n+import Loader from \"../../components/Loader\";\r\n+\r\n+const AdminDashboard = () => {\r\n+  const { data: sales, isLoading } = useGetTotalSalesQuery();\r\n+  const { data: customers, isLoading: loading } = useGetUsersQuery();\r\n+  const { data: orders, isLoading: loadingTwo } = useGetTotalOrdersQuery();\r\n+  const { data: salesDetail } = useGetTotalSalesByDateQuery();\r\n+\r\n+  const [state, setState] = useState({\r\n+    options: {\r\n+      chart: {\r\n+        type: \"line\",\r\n+      },\r\n+      tooltip: {\r\n+        theme: \"dark\",\r\n+      },\r\n+      colors: [\"#00E396\"],\r\n+      dataLabels: {\r\n+        enabled: true,\r\n+      },\r\n+      stroke: {\r\n+        curve: \"smooth\",\r\n+      },\r\n+      title: {\r\n+        text: \"Sales Trend\",\r\n+        align: \"left\",\r\n+      },\r\n+      grid: {\r\n+        borderColor: \"#ccc\",\r\n+      },\r\n+      markers: {\r\n+        size: 1,\r\n+      },\r\n+      xaxis: {\r\n+        categories: [],\r\n+        title: {\r\n+          text: \"Date\",\r\n+        },\r\n+      },\r\n+      yaxis: {\r\n+        title: {\r\n+          text: \"Sales\",\r\n+        },\r\n+        min: 0,\r\n+      },\r\n+      legend: {\r\n+        position: \"top\",\r\n+        horizontalAlign: \"right\",\r\n+        floating: true,\r\n+        offsetY: -25,\r\n+        offsetX: -5,\r\n+      },\r\n+    },\r\n+    series: [{ name: \"Sales\", data: [] }],\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (salesDetail) {\r\n+      const formattedSalesDate = salesDetail.map((item) => ({\r\n+        x: item._id,\r\n+        y: item.totalSales,\r\n+      }));\r\n+\r\n+      setState((prevState) => ({\r\n+        ...prevState,\r\n+        options: {\r\n+          ...prevState.options,\r\n+          xaxis: {\r\n+            categories: formattedSalesDate.map((item) => item.x),\r\n+          },\r\n+        },\r\n+\r\n+        series: [\r\n+          { name: \"Sales\", data: formattedSalesDate.map((item) => item.y) },\r\n+        ],\r\n+      }));\r\n+    }\r\n+  }, [salesDetail]);\r\n+\r\n+  return (\r\n+    <>\r\n+      <AdminMenu />\r\n+\r\n+      <section className=\"xl:ml-[4rem] md:ml-[0rem]\">\r\n+        <div className=\"w-[80%] flex justify-around flex-wrap\">\r\n+          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n+            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center text-white p-3\">\r\n+              ₹\r\n+            </div>\r\n+\r\n+            <p className=\"mt-5\">Sales</p>\r\n+           <h1 className=\"text-xl font-bold text-white\">\r\n+  ₹ {isLoading ? <Loader /> : sales.totalSales.toFixed(2)}\r\n+</h1>\r\n+\r\n+          </div>\r\n+          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5 text-white\">\r\n+            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n+              ₹\r\n+            </div>\r\n+\r\n+            <p className=\"mt-5\">Customers</p>\r\n+            <h1 className=\"text-xl font-bold\">\r\n+              ₹ {isLoading ? <Loader /> : customers?.length}\r\n+            </h1>\r\n+          </div>\r\n+          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n+            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n+              ₹\r\n+            </div>\r\n+\r\n+            <p className=\"mt-5\">All Orders</p>\r\n+            <h1 className=\"text-xl font-bold\">\r\n+              ₹ {isLoading ? <Loader /> : orders?.totalOrders}\r\n+            </h1>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <div className=\"ml-[10rem] mt-[4rem]\">\r\n+          <Chart\r\n+            options={state.options}\r\n+            series={state.series}\r\n+            type=\"bar\"\r\n+            width=\"70%\"\r\n+          />\r\n+        </div>\r\n+\r\n+        <div className=\"mt-[4rem]\">\r\n+          <OrderList />\r\n+        </div>\r\n+      </section>\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n+export default AdminDashboard;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753275007906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,56 +91,60 @@\n   return (\r\n     <>\r\n       <AdminMenu />\r\n \r\n-      <section className=\"xl:ml-[4rem] md:ml-[0rem]\">\r\n-        <div className=\"w-[80%] flex justify-around flex-wrap\">\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center text-white p-3\">\r\n-              ₹\r\n-            </div>\r\n+      <section className=\"xl:ml-16 md:ml-0 px-4\">\r\n+  <div className=\"w-full flex flex-wrap justify-center gap-6\">\r\n+    {/* Sales Card */}\r\n+    <div className=\"bg-black text-white rounded-lg p-5 w-[20rem] shadow-lg\">\r\n+      <div className=\"font-bold rounded-full w-12 h-12 bg-pink-500 flex items-center justify-center text-white text-xl\">\r\n+        ₹\r\n+      </div>\r\n+      <p className=\"mt-4 text-gray-300\">Sales</p>\r\n+      <h1 className=\"text-2xl font-bold mt-2\">\r\n+        {isLoading ? <Loader /> : `₹ ${sales.totalSales.toFixed(2)}`}\r\n+      </h1>\r\n+    </div>\r\n \r\n-            <p className=\"mt-5\">Sales</p>\r\n-           <h1 className=\"text-xl font-bold text-white\">\r\n-  ₹ {isLoading ? <Loader /> : sales.totalSales.toFixed(2)}\r\n-</h1>\r\n+    {/* Customers Card */}\r\n+    <div className=\"bg-black text-white rounded-lg p-5 w-[20rem] shadow-lg\">\r\n+      <div className=\"font-bold rounded-full w-12 h-12 bg-pink-500 flex items-center justify-center text-xl\">\r\n+        👥\r\n+      </div>\r\n+      <p className=\"mt-4 text-gray-300\">Customers</p>\r\n+      <h1 className=\"text-2xl font-bold mt-2\">\r\n+        {isLoading ? <Loader /> : customers?.length}\r\n+      </h1>\r\n+    </div>\r\n \r\n-          </div>\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5 text-white\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n-              ₹\r\n-            </div>\r\n+    {/* Orders Card */}\r\n+    <div className=\"bg-black text-white rounded-lg p-5 w-[20rem] shadow-lg\">\r\n+      <div className=\"font-bold rounded-full w-12 h-12 bg-pink-500 flex items-center justify-center text-xl\">\r\n+        📦\r\n+      </div>\r\n+      <p className=\"mt-4 text-gray-300\">All Orders</p>\r\n+      <h1 className=\"text-2xl font-bold mt-2\">\r\n+        {isLoading ? <Loader /> : orders?.totalOrders}\r\n+      </h1>\r\n+    </div>\r\n+  </div>\r\n \r\n-            <p className=\"mt-5\">Customers</p>\r\n-            <h1 className=\"text-xl font-bold\">\r\n-              ₹ {isLoading ? <Loader /> : customers?.length}\r\n-            </h1>\r\n-          </div>\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n-              ₹\r\n-            </div>\r\n+  {/* Chart */}\r\n+  <div className=\"w-full flex justify-center mt-16\">\r\n+    <Chart\r\n+      options={state.options}\r\n+      series={state.series}\r\n+      type=\"bar\"\r\n+      width=\"80%\"\r\n+    />\r\n+  </div>\r\n \r\n-            <p className=\"mt-5\">All Orders</p>\r\n-            <h1 className=\"text-xl font-bold\">\r\n-              ₹ {isLoading ? <Loader /> : orders?.totalOrders}\r\n-            </h1>\r\n-          </div>\r\n-        </div>\r\n+  {/* Order List */}\r\n+  <div className=\"mt-16 px-4\">\r\n+    <OrderList />\r\n+  </div>\r\n+</section>\r\n \r\n-        <div className=\"ml-[10rem] mt-[4rem]\">\r\n-          <Chart\r\n-            options={state.options}\r\n-            series={state.series}\r\n-            type=\"bar\"\r\n-            width=\"70%\"\r\n-          />\r\n-        </div>\r\n-\r\n-        <div className=\"mt-[4rem]\">\r\n-          <OrderList />\r\n-        </div>\r\n-      </section>\r\n     </>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1753275022620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,147 @@\n+import Chart from 'react-apexcharts'\r\n+import { useGetUsersQuery } from \"../../redux/api/usersApiSlice\";\r\n+import {\r\n+  useGetTotalOrdersQuery,\r\n+  useGetTotalSalesByDateQuery,\r\n+  useGetTotalSalesQuery,\r\n+} from \"../../redux/api/orderApiSlice\";\r\n+\r\n+import { useState, useEffect } from \"react\";\r\n+import AdminMenu from \"./AdminMenu\";\r\n+import OrderList from \"./OrderList\";\r\n+import Loader from \"../../components/Loader\";\r\n+\r\n+const AdminDashboard = () => {\r\n+  const { data: sales, isLoading } = useGetTotalSalesQuery();\r\n+  const { data: customers, isLoading: loading } = useGetUsersQuery();\r\n+  const { data: orders, isLoading: loadingTwo } = useGetTotalOrdersQuery();\r\n+  const { data: salesDetail } = useGetTotalSalesByDateQuery();\r\n+\r\n+  const [state, setState] = useState({\r\n+    options: {\r\n+      chart: {\r\n+        type: \"line\",\r\n+      },\r\n+      tooltip: {\r\n+        theme: \"dark\",\r\n+      },\r\n+      colors: [\"#00E396\"],\r\n+      dataLabels: {\r\n+        enabled: true,\r\n+      },\r\n+      stroke: {\r\n+        curve: \"smooth\",\r\n+      },\r\n+      title: {\r\n+        text: \"Sales Trend\",\r\n+        align: \"left\",\r\n+      },\r\n+      grid: {\r\n+        borderColor: \"#ccc\",\r\n+      },\r\n+      markers: {\r\n+        size: 1,\r\n+      },\r\n+      xaxis: {\r\n+        categories: [],\r\n+        title: {\r\n+          text: \"Date\",\r\n+        },\r\n+      },\r\n+      yaxis: {\r\n+        title: {\r\n+          text: \"Sales\",\r\n+        },\r\n+        min: 0,\r\n+      },\r\n+      legend: {\r\n+        position: \"top\",\r\n+        horizontalAlign: \"right\",\r\n+        floating: true,\r\n+        offsetY: -25,\r\n+        offsetX: -5,\r\n+      },\r\n+    },\r\n+    series: [{ name: \"Sales\", data: [] }],\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (salesDetail) {\r\n+      const formattedSalesDate = salesDetail.map((item) => ({\r\n+        x: item._id,\r\n+        y: item.totalSales,\r\n+      }));\r\n+\r\n+      setState((prevState) => ({\r\n+        ...prevState,\r\n+        options: {\r\n+          ...prevState.options,\r\n+          xaxis: {\r\n+            categories: formattedSalesDate.map((item) => item.x),\r\n+          },\r\n+        },\r\n+\r\n+        series: [\r\n+          { name: \"Sales\", data: formattedSalesDate.map((item) => item.y) },\r\n+        ],\r\n+      }));\r\n+    }\r\n+  }, [salesDetail]);\r\n+\r\n+  return (\r\n+    <>\r\n+      <AdminMenu />\r\n+\r\n+      <section className=\"xl:ml-[4rem] md:ml-[0rem]\">\r\n+        <div className=\"w-[80%] flex justify-around flex-wrap\">\r\n+          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n+            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center text-white p-3\">\r\n+              ₹\r\n+            </div>\r\n+\r\n+            <p className=\"mt-5\">Sales</p>\r\n+           <h1 className=\"text-xl font-bold text-white\">\r\n+  ₹ {isLoading ? <Loader /> : sales.totalSales.toFixed(2)}\r\n+</h1>\r\n+\r\n+          </div>\r\n+          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5 text-white\">\r\n+            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n+              ₹\r\n+            </div>\r\n+\r\n+            <p className=\"mt-5\">Customers</p>\r\n+            <h1 className=\"text-xl font-bold\">\r\n+              ₹ {isLoading ? <Loader /> : customers?.length}\r\n+            </h1>\r\n+          </div>\r\n+          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n+            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n+              ₹\r\n+            </div>\r\n+\r\n+            <p className=\"mt-5\">All Orders</p>\r\n+            <h1 className=\"text-xl font-bold\">\r\n+              ₹ {isLoading ? <Loader /> : orders?.totalOrders}\r\n+            </h1>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <div className=\"ml-[10rem] mt-[4rem]\">\r\n+          <Chart\r\n+            options={state.options}\r\n+            series={state.series}\r\n+            type=\"bar\"\r\n+            width=\"70%\"\r\n+          />\r\n+        </div>\r\n+\r\n+        <div className=\"mt-[4rem]\">\r\n+          <OrderList />\r\n+        </div>\r\n+      </section>\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n+export default AdminDashboard;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753275062101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,155 +91,8 @@\n   return (\r\n     <>\r\n       <AdminMenu />\r\n \r\n-      <section className=\"xl:ml-[4rem] md:ml-[0rem]\">\r\n-        <div className=\"w-[80%] flex justify-around flex-wrap\">\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center text-white p-3\">\r\n-              ₹\r\n-            </div>\r\n-\r\n-            <p className=\"mt-5\">Sales</p>\r\n-           <h1 className=\"text-xl font-bold text-white\">\r\n-  ₹ {isLoading ? <Loader /> : sales.totalSales.toFixed(2)}\r\n-</h1>\r\n-\r\n-          </div>\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5 text-white\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n-              ₹\r\n-            </div>\r\n-\r\n-            <p className=\"mt-5\">Customers</p>\r\n-            <h1 className=\"text-xl font-bold\">\r\n-              ₹ {isLoading ? <Loader /> : customers?.length}\r\n-            </h1>\r\n-          </div>\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n-              ₹\r\n-            </div>\r\n-\r\n-            <p className=\"mt-5\">All Orders</p>\r\n-            <h1 className=\"text-xl font-bold\">\r\n-              ₹ {isLoading ? <Loader /> : orders?.totalOrders}\r\n-            </h1>\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <div className=\"ml-[10rem] mt-[4rem]\">\r\n-          <Chart\r\n-            options={state.options}\r\n-            series={state.series}\r\n-            type=\"bar\"\r\n-            width=\"70%\"\r\n-          />\r\n-        </div>\r\n-\r\n-        <div className=\"mt-[4rem]\">\r\n-          <OrderList />\r\n-        </div>\r\n-      </section>\r\n-    </>\r\n-  );\r\n-};\r\n-\r\n-export default AdminDashboard;\n-import Chart from 'react-apexcharts'\r\n-import { useGetUsersQuery } from \"../../redux/api/usersApiSlice\";\r\n-import {\r\n-  useGetTotalOrdersQuery,\r\n-  useGetTotalSalesByDateQuery,\r\n-  useGetTotalSalesQuery,\r\n-} from \"../../redux/api/orderApiSlice\";\r\n-\r\n-import { useState, useEffect } from \"react\";\r\n-import AdminMenu from \"./AdminMenu\";\r\n-import OrderList from \"./OrderList\";\r\n-import Loader from \"../../components/Loader\";\r\n-\r\n-const AdminDashboard = () => {\r\n-  const { data: sales, isLoading } = useGetTotalSalesQuery();\r\n-  const { data: customers, isLoading: loading } = useGetUsersQuery();\r\n-  const { data: orders, isLoading: loadingTwo } = useGetTotalOrdersQuery();\r\n-  const { data: salesDetail } = useGetTotalSalesByDateQuery();\r\n-\r\n-  const [state, setState] = useState({\r\n-    options: {\r\n-      chart: {\r\n-        type: \"line\",\r\n-      },\r\n-      tooltip: {\r\n-        theme: \"dark\",\r\n-      },\r\n-      colors: [\"#00E396\"],\r\n-      dataLabels: {\r\n-        enabled: true,\r\n-      },\r\n-      stroke: {\r\n-        curve: \"smooth\",\r\n-      },\r\n-      title: {\r\n-        text: \"Sales Trend\",\r\n-        align: \"left\",\r\n-      },\r\n-      grid: {\r\n-        borderColor: \"#ccc\",\r\n-      },\r\n-      markers: {\r\n-        size: 1,\r\n-      },\r\n-      xaxis: {\r\n-        categories: [],\r\n-        title: {\r\n-          text: \"Date\",\r\n-        },\r\n-      },\r\n-      yaxis: {\r\n-        title: {\r\n-          text: \"Sales\",\r\n-        },\r\n-        min: 0,\r\n-      },\r\n-      legend: {\r\n-        position: \"top\",\r\n-        horizontalAlign: \"right\",\r\n-        floating: true,\r\n-        offsetY: -25,\r\n-        offsetX: -5,\r\n-      },\r\n-    },\r\n-    series: [{ name: \"Sales\", data: [] }],\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (salesDetail) {\r\n-      const formattedSalesDate = salesDetail.map((item) => ({\r\n-        x: item._id,\r\n-        y: item.totalSales,\r\n-      }));\r\n-\r\n-      setState((prevState) => ({\r\n-        ...prevState,\r\n-        options: {\r\n-          ...prevState.options,\r\n-          xaxis: {\r\n-            categories: formattedSalesDate.map((item) => item.x),\r\n-          },\r\n-        },\r\n-\r\n-        series: [\r\n-          { name: \"Sales\", data: formattedSalesDate.map((item) => item.y) },\r\n-        ],\r\n-      }));\r\n-    }\r\n-  }, [salesDetail]);\r\n-\r\n-  return (\r\n-    <>\r\n-      <AdminMenu />\r\n-\r\n       <section className=\"xl:ml-16 md:ml-0 px-4\">\r\n   <div className=\"w-full flex flex-wrap justify-center gap-6\">\r\n     {/* Sales Card */}\r\n     <div className=\"bg-black text-white rounded-lg p-5 w-[20rem] shadow-lg\">\r\n@@ -274,158 +127,8 @@\n       </h1>\r\n     </div>\r\n   </div>\r\n \r\n-  {/* Chart */}\r\n-  <div className=\"w-full flex justify-center mt-16\">\r\n-    <Chart\r\n-      options={state.options}\r\n-      series={state.series}\r\n-      type=\"bar\"\r\n-      width=\"80%\"\r\n-    />\r\n-  </div>\r\n-\r\n-  {/* Order List */}\r\n-  <div className=\"mt-16 px-4\">\r\n-    <OrderList />\r\n-  </div>\r\n-</section>\r\n-\r\n-    </>\r\n-  );\r\n-};\r\n-\r\n-export default AdminDashboard;\n-import Chart from 'react-apexcharts'\r\n-import { useGetUsersQuery } from \"../../redux/api/usersApiSlice\";\r\n-import {\r\n-  useGetTotalOrdersQuery,\r\n-  useGetTotalSalesByDateQuery,\r\n-  useGetTotalSalesQuery,\r\n-} from \"../../redux/api/orderApiSlice\";\r\n-\r\n-import { useState, useEffect } from \"react\";\r\n-import AdminMenu from \"./AdminMenu\";\r\n-import OrderList from \"./OrderList\";\r\n-import Loader from \"../../components/Loader\";\r\n-\r\n-const AdminDashboard = () => {\r\n-  const { data: sales, isLoading } = useGetTotalSalesQuery();\r\n-  const { data: customers, isLoading: loading } = useGetUsersQuery();\r\n-  const { data: orders, isLoading: loadingTwo } = useGetTotalOrdersQuery();\r\n-  const { data: salesDetail } = useGetTotalSalesByDateQuery();\r\n-\r\n-  const [state, setState] = useState({\r\n-    options: {\r\n-      chart: {\r\n-        type: \"line\",\r\n-      },\r\n-      tooltip: {\r\n-        theme: \"dark\",\r\n-      },\r\n-      colors: [\"#00E396\"],\r\n-      dataLabels: {\r\n-        enabled: true,\r\n-      },\r\n-      stroke: {\r\n-        curve: \"smooth\",\r\n-      },\r\n-      title: {\r\n-        text: \"Sales Trend\",\r\n-        align: \"left\",\r\n-      },\r\n-      grid: {\r\n-        borderColor: \"#ccc\",\r\n-      },\r\n-      markers: {\r\n-        size: 1,\r\n-      },\r\n-      xaxis: {\r\n-        categories: [],\r\n-        title: {\r\n-          text: \"Date\",\r\n-        },\r\n-      },\r\n-      yaxis: {\r\n-        title: {\r\n-          text: \"Sales\",\r\n-        },\r\n-        min: 0,\r\n-      },\r\n-      legend: {\r\n-        position: \"top\",\r\n-        horizontalAlign: \"right\",\r\n-        floating: true,\r\n-        offsetY: -25,\r\n-        offsetX: -5,\r\n-      },\r\n-    },\r\n-    series: [{ name: \"Sales\", data: [] }],\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (salesDetail) {\r\n-      const formattedSalesDate = salesDetail.map((item) => ({\r\n-        x: item._id,\r\n-        y: item.totalSales,\r\n-      }));\r\n-\r\n-      setState((prevState) => ({\r\n-        ...prevState,\r\n-        options: {\r\n-          ...prevState.options,\r\n-          xaxis: {\r\n-            categories: formattedSalesDate.map((item) => item.x),\r\n-          },\r\n-        },\r\n-\r\n-        series: [\r\n-          { name: \"Sales\", data: formattedSalesDate.map((item) => item.y) },\r\n-        ],\r\n-      }));\r\n-    }\r\n-  }, [salesDetail]);\r\n-\r\n-  return (\r\n-    <>\r\n-      <AdminMenu />\r\n-\r\n-      <section className=\"xl:ml-[4rem] md:ml-[0rem]\">\r\n-        <div className=\"w-[80%] flex justify-around flex-wrap\">\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n-              ₹\r\n-            </div>\r\n-\r\n-            <p className=\"mt-5\">Sales</p>\r\n-           <h1 className=\"text-xl font-bold text-white\">\r\n-  ₹ {isLoading ? <Loader /> : sales.totalSales.toFixed(2)}\r\n-</h1>\r\n-\r\n-          </div>\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5 text-white\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n-              ₹\r\n-            </div>\r\n-\r\n-            <p className=\"mt-5\">Customers</p>\r\n-            <h1 className=\"text-xl font-bold\">\r\n-              ₹ {isLoading ? <Loader /> : customers?.length}\r\n-            </h1>\r\n-          </div>\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n-              ₹\r\n-            </div>\r\n-\r\n-            <p className=\"mt-5\">All Orders</p>\r\n-            <h1 className=\"text-xl font-bold\">\r\n-              ₹ {isLoading ? <Loader /> : orders?.totalOrders}\r\n-            </h1>\r\n-          </div>\r\n-        </div>\r\n-\r\n         <div className=\"ml-[10rem] mt-[4rem]\">\r\n           <Chart\r\n             options={state.options}\r\n             series={state.series}\r\n@@ -441,730 +144,5 @@\n     </>\r\n   );\r\n };\r\n \r\n-export default AdminDashboard;\n-import Chart from 'react-apexcharts'\r\n-import { useGetUsersQuery } from \"../../redux/api/usersApiSlice\";\r\n-import {\r\n-  useGetTotalOrdersQuery,\r\n-  useGetTotalSalesByDateQuery,\r\n-  useGetTotalSalesQuery,\r\n-} from \"../../redux/api/orderApiSlice\";\r\n-\r\n-import { useState, useEffect } from \"react\";\r\n-import AdminMenu from \"./AdminMenu\";\r\n-import OrderList from \"./OrderList\";\r\n-import Loader from \"../../components/Loader\";\r\n-\r\n-const AdminDashboard = () => {\r\n-  const { data: sales, isLoading } = useGetTotalSalesQuery();\r\n-  const { data: customers, isLoading: loading } = useGetUsersQuery();\r\n-  const { data: orders, isLoading: loadingTwo } = useGetTotalOrdersQuery();\r\n-  const { data: salesDetail } = useGetTotalSalesByDateQuery();\r\n-\r\n-  const [state, setState] = useState({\r\n-    options: {\r\n-      chart: {\r\n-        type: \"line\",\r\n-      },\r\n-      tooltip: {\r\n-        theme: \"dark\",\r\n-      },\r\n-      colors: [\"#00E396\"],\r\n-      dataLabels: {\r\n-        enabled: true,\r\n-      },\r\n-      stroke: {\r\n-        curve: \"smooth\",\r\n-      },\r\n-      title: {\r\n-        text: \"Sales Trend\",\r\n-        align: \"left\",\r\n-      },\r\n-      grid: {\r\n-        borderColor: \"#ccc\",\r\n-      },\r\n-      markers: {\r\n-        size: 1,\r\n-      },\r\n-      xaxis: {\r\n-        categories: [],\r\n-        title: {\r\n-          text: \"Date\",\r\n-        },\r\n-      },\r\n-      yaxis: {\r\n-        title: {\r\n-          text: \"Sales\",\r\n-        },\r\n-        min: 0,\r\n-      },\r\n-      legend: {\r\n-        position: \"top\",\r\n-        horizontalAlign: \"right\",\r\n-        floating: true,\r\n-        offsetY: -25,\r\n-        offsetX: -5,\r\n-      },\r\n-    },\r\n-    series: [{ name: \"Sales\", data: [] }],\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (salesDetail) {\r\n-      const formattedSalesDate = salesDetail.map((item) => ({\r\n-        x: item._id,\r\n-        y: item.totalSales,\r\n-      }));\r\n-\r\n-      setState((prevState) => ({\r\n-        ...prevState,\r\n-        options: {\r\n-          ...prevState.options,\r\n-          xaxis: {\r\n-            categories: formattedSalesDate.map((item) => item.x),\r\n-          },\r\n-        },\r\n-\r\n-        series: [\r\n-          { name: \"Sales\", data: formattedSalesDate.map((item) => item.y) },\r\n-        ],\r\n-      }));\r\n-    }\r\n-  }, [salesDetail]);\r\n-\r\n-  return (\r\n-    <>\r\n-      <AdminMenu />\r\n-\r\n-      <section className=\"xl:ml-[4rem] md:ml-[0rem]\">\r\n-        <div className=\"w-[80%] flex justify-around flex-wrap\">\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n-              ₹\r\n-            </div>\r\n-\r\n-            <p className=\"mt-5\">Sales</p>\r\n-           <h1 className=\"text-xl font-bold text-white\">\r\n-  ₹ {isLoading ? <Loader /> : sales.totalSales.toFixed(2)}\r\n-</h1>\r\n-\r\n-          </div>\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n-              ₹\r\n-            </div>\r\n-\r\n-            <p className=\"mt-5\">Customers</p>\r\n-            <h1 className=\"text-xl font-bold\">\r\n-              ₹ {isLoading ? <Loader /> : customers?.length}\r\n-            </h1>\r\n-          </div>\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n-              ₹\r\n-            </div>\r\n-\r\n-            <p className=\"mt-5\">All Orders</p>\r\n-            <h1 className=\"text-xl font-bold\">\r\n-              ₹ {isLoading ? <Loader /> : orders?.totalOrders}\r\n-            </h1>\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <div className=\"ml-[10rem] mt-[4rem]\">\r\n-          <Chart\r\n-            options={state.options}\r\n-            series={state.series}\r\n-            type=\"bar\"\r\n-            width=\"70%\"\r\n-          />\r\n-        </div>\r\n-\r\n-        <div className=\"mt-[4rem]\">\r\n-          <OrderList />\r\n-        </div>\r\n-      </section>\r\n-    </>\r\n-  );\r\n-};\r\n-\r\n-export default AdminDashboard;\n-import { useEffect, useState } from \"react\";\r\n-import Chart from \"react-apexcharts\";\r\n-\r\n-import { useGetUsersQuery } from \"../../redux/api/usersApiSlice\";\r\n-import {\r\n-  useGetTotalOrdersQuery,\r\n-  useGetTotalSalesByDateQuery,\r\n-  useGetTotalSalesQuery,\r\n-} from \"../../redux/api/orderApiSlice\";\r\n-\r\n-import AdminMenu from \"./AdminMenu\";\r\n-import OrderList from \"./OrderList\";\r\n-import Loader from \"../../components/Loader\";\r\n-\r\n-const DashboardCard = ({ label, icon, value, loading }) => (\r\n-  <div className=\"rounded-lg bg-neutral-900 p-5 w-[20rem] mt-5 shadow\">\r\n-    <div className=\"font-bold rounded-full w-[3rem] h-[3rem] bg-pink-500 flex items-center justify-center text-white text-lg\">\r\n-      {icon}\r\n-    </div>\r\n-    <p className=\"mt-5 text-white\">{label}</p>\r\n-    <h1 className=\"text-xl font-bold text-white mt-1\">\r\n-      {loading ? <Loader /> : value}\r\n-    </h1>\r\n-  </div>\r\n-);\r\n-\r\n-const AdminDashboard = () => {\r\n-  const { data: sales, isLoading: loadingSales } = useGetTotalSalesQuery();\r\n-  const { data: customers, isLoading: loadingCustomers } = useGetUsersQuery();\r\n-  const { data: orders, isLoading: loadingOrders } = useGetTotalOrdersQuery();\r\n-  const { data: salesDetail } = useGetTotalSalesByDateQuery();\r\n-\r\n-  const [chartState, setChartState] = useState({\r\n-    options: {\r\n-      chart: { type: \"line\" },\r\n-      tooltip: { theme: \"dark\" },\r\n-      colors: [\"#00E396\"],\r\n-      dataLabels: { enabled: true },\r\n-      stroke: { curve: \"smooth\" },\r\n-      title: {\r\n-        text: \"Sales Trend\",\r\n-        align: \"left\",\r\n-        style: { color: \"#fff\" },\r\n-      },\r\n-      grid: { borderColor: \"#ccc\" },\r\n-      markers: { size: 1 },\r\n-      xaxis: {\r\n-        categories: [],\r\n-        title: { text: \"Date\", style: { color: \"#fff\" } },\r\n-        labels: { style: { colors: \"#fff\" } },\r\n-      },\r\n-      yaxis: {\r\n-        title: { text: \"Sales\", style: { color: \"#fff\" } },\r\n-        labels: { style: { colors: \"#fff\" } },\r\n-        min: 0,\r\n-      },\r\n-      legend: {\r\n-        labels: { colors: \"#fff\" },\r\n-        position: \"top\",\r\n-        horizontalAlign: \"right\",\r\n-        floating: true,\r\n-        offsetY: -25,\r\n-        offsetX: -5,\r\n-      },\r\n-    },\r\n-    series: [{ name: \"Sales\", data: [] }],\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (salesDetail) {\r\n-      const formatted = salesDetail.map((item) => ({\r\n-        x: item._id,\r\n-        y: item.totalSales,\r\n-      }));\r\n-\r\n-      setChartState((prev) => ({\r\n-        ...prev,\r\n-        options: {\r\n-          ...prev.options,\r\n-          xaxis: {\r\n-            ...prev.options.xaxis,\r\n-            categories: formatted.map((item) => item.x),\r\n-          },\r\n-        },\r\n-        series: [\r\n-          {\r\n-            name: \"Sales\",\r\n-            data: formatted.map((item) => item.y),\r\n-          },\r\n-        ],\r\n-      }));\r\n-    }\r\n-  }, [salesDetail]);\r\n-\r\n-  return (\r\n-    <>\r\n-      <AdminMenu />\r\n-\r\n-      <section className=\"xl:ml-[4rem] md:ml-[0rem]\">\r\n-        <div className=\"w-[80%] flex justify-around flex-wrap\">\r\n-          <DashboardCard\r\n-            label=\"Sales\"\r\n-            icon=\"₹\"\r\n-            value={`₹ ${sales?.totalSales?.toFixed(2) ?? \"0.00\"}`}\r\n-            loading={loadingSales}\r\n-          />\r\n-          <DashboardCard\r\n-            label=\"Customers\"\r\n-            icon=\"👥\"\r\n-            value={customers?.length ?? 0}\r\n-            loading={loadingCustomers}\r\n-          />\r\n-          <DashboardCard\r\n-            label=\"All Orders\"\r\n-            icon=\"📦\"\r\n-            value={orders?.totalOrders ?? 0}\r\n-            loading={loadingOrders}\r\n-          />\r\n-        </div>\r\n-\r\n-        <div className=\"ml-[10rem] mt-[4rem]\">\r\n-          <Chart\r\n-            options={chartState.options}\r\n-            series={chartState.series}\r\n-            type=\"bar\"\r\n-            width=\"70%\"\r\n-          />\r\n-        </div>\r\n-\r\n-        <div className=\"mt-[4rem]\">\r\n-          <OrderList />\r\n-        </div>\r\n-      </section>\r\n-    </>\r\n-  );\r\n-};\r\n-\r\n-export default AdminDashboard;\r\n-import Chart from 'react-apexcharts'\r\n-import { useGetUsersQuery } from \"../../redux/api/usersApiSlice\";\r\n-import {\r\n-  useGetTotalOrdersQuery,\r\n-  useGetTotalSalesByDateQuery,\r\n-  useGetTotalSalesQuery,\r\n-} from \"../../redux/api/orderApiSlice\";\r\n-\r\n-import { useState, useEffect } from \"react\";\r\n-import AdminMenu from \"./AdminMenu\";\r\n-import OrderList from \"./OrderList\";\r\n-import Loader from \"../../components/Loader\";\r\n-\r\n-const AdminDashboard = () => {\r\n-  const { data: sales, isLoading } = useGetTotalSalesQuery();\r\n-  const { data: customers, isLoading: loading } = useGetUsersQuery();\r\n-  const { data: orders, isLoading: loadingTwo } = useGetTotalOrdersQuery();\r\n-  const { data: salesDetail } = useGetTotalSalesByDateQuery();\r\n-\r\n-  const [state, setState] = useState({\r\n-    options: {\r\n-      chart: {\r\n-        type: \"line\",\r\n-      },\r\n-      tooltip: {\r\n-        theme: \"dark\",\r\n-      },\r\n-      colors: [\"#00E396\"],\r\n-      dataLabels: {\r\n-        enabled: true,\r\n-      },\r\n-      stroke: {\r\n-        curve: \"smooth\",\r\n-      },\r\n-      title: {\r\n-        text: \"Sales Trend\",\r\n-        align: \"left\",\r\n-      },\r\n-      grid: {\r\n-        borderColor: \"#ccc\",\r\n-      },\r\n-      markers: {\r\n-        size: 1,\r\n-      },\r\n-      xaxis: {\r\n-        categories: [],\r\n-        title: {\r\n-          text: \"Date\",\r\n-        },\r\n-      },\r\n-      yaxis: {\r\n-        title: {\r\n-          text: \"Sales\",\r\n-        },\r\n-        min: 0,\r\n-      },\r\n-      legend: {\r\n-        position: \"top\",\r\n-        horizontalAlign: \"right\",\r\n-        floating: true,\r\n-        offsetY: -25,\r\n-        offsetX: -5,\r\n-      },\r\n-    },\r\n-    series: [{ name: \"Sales\", data: [] }],\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (salesDetail) {\r\n-      const formattedSalesDate = salesDetail.map((item) => ({\r\n-        x: item._id,\r\n-        y: item.totalSales,\r\n-      }));\r\n-\r\n-      setState((prevState) => ({\r\n-        ...prevState,\r\n-        options: {\r\n-          ...prevState.options,\r\n-          xaxis: {\r\n-            categories: formattedSalesDate.map((item) => item.x),\r\n-          },\r\n-        },\r\n-\r\n-        series: [\r\n-          { name: \"Sales\", data: formattedSalesDate.map((item) => item.y) },\r\n-        ],\r\n-      }));\r\n-    }\r\n-  }, [salesDetail]);\r\n-\r\n-  return (\r\n-    <>\r\n-      <AdminMenu />\r\n-\r\n-      <section className=\"xl:ml-[4rem] md:ml-[0rem]\">\r\n-        <div className=\"w-[80%] flex justify-around flex-wrap\">\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n-              ₹\r\n-            </div>\r\n-\r\n-            <p className=\"mt-5\">Sales</p>\r\n-           <h1 className=\"text-xl font-bold text-white\">\r\n-  ₹ {isLoading ? <Loader /> : sales.totalSales.toFixed(2)}\r\n-</h1>\r\n-\r\n-          </div>\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n-              ₹\r\n-            </div>\r\n-\r\n-            <p className=\"mt-5\">Customers</p>\r\n-            <h1 className=\"text-xl font-bold\">\r\n-              ₹ {isLoading ? <Loader /> : customers?.length}\r\n-            </h1>\r\n-          </div>\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n-              ₹\r\n-            </div>\r\n-\r\n-            <p className=\"mt-5\">All Orders</p>\r\n-            <h1 className=\"text-xl font-bold\">\r\n-              ₹ {isLoading ? <Loader /> : orders?.totalOrders}\r\n-            </h1>\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <div className=\"ml-[10rem] mt-[4rem]\">\r\n-          <Chart\r\n-            options={state.options}\r\n-            series={state.series}\r\n-            type=\"bar\"\r\n-            width=\"70%\"\r\n-          />\r\n-        </div>\r\n-\r\n-        <div className=\"mt-[4rem]\">\r\n-          <OrderList />\r\n-        </div>\r\n-      </section>\r\n-    </>\r\n-  );\r\n-};\r\n-\r\n-export default AdminDashboard;\n-import Chart from 'react-apexcharts'\r\n-import { useGetUsersQuery } from \"../../redux/api/usersApiSlice\";\r\n-import {\r\n-  useGetTotalOrdersQuery,\r\n-  useGetTotalSalesByDateQuery,\r\n-  useGetTotalSalesQuery,\r\n-} from \"../../redux/api/orderApiSlice\";\r\n-\r\n-import { useState, useEffect } from \"react\";\r\n-import AdminMenu from \"./AdminMenu\";\r\n-import OrderList from \"./OrderList\";\r\n-import Loader from \"../../components/Loader\";\r\n-\r\n-const AdminDashboard = () => {\r\n-  const { data: sales, isLoading } = useGetTotalSalesQuery();\r\n-  const { data: customers, isLoading: loading } = useGetUsersQuery();\r\n-  const { data: orders, isLoading: loadingTwo } = useGetTotalOrdersQuery();\r\n-  const { data: salesDetail } = useGetTotalSalesByDateQuery();\r\n-\r\n-  const [state, setState] = useState({\r\n-    options: {\r\n-      chart: {\r\n-        type: \"line\",\r\n-      },\r\n-      tooltip: {\r\n-        theme: \"dark\",\r\n-      },\r\n-      colors: [\"#00E396\"],\r\n-      dataLabels: {\r\n-        enabled: true,\r\n-      },\r\n-      stroke: {\r\n-        curve: \"smooth\",\r\n-      },\r\n-      title: {\r\n-        text: \"Sales Trend\",\r\n-        align: \"left\",\r\n-      },\r\n-      grid: {\r\n-        borderColor: \"#ccc\",\r\n-      },\r\n-      markers: {\r\n-        size: 1,\r\n-      },\r\n-      xaxis: {\r\n-        categories: [],\r\n-        title: {\r\n-          text: \"Date\",\r\n-        },\r\n-      },\r\n-      yaxis: {\r\n-        title: {\r\n-          text: \"Sales\",\r\n-        },\r\n-        min: 0,\r\n-      },\r\n-      legend: {\r\n-        position: \"top\",\r\n-        horizontalAlign: \"right\",\r\n-        floating: true,\r\n-        offsetY: -25,\r\n-        offsetX: -5,\r\n-      },\r\n-    },\r\n-    series: [{ name: \"Sales\", data: [] }],\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (salesDetail) {\r\n-      const formattedSalesDate = salesDetail.map((item) => ({\r\n-        x: item._id,\r\n-        y: item.totalSales,\r\n-      }));\r\n-\r\n-      setState((prevState) => ({\r\n-        ...prevState,\r\n-        options: {\r\n-          ...prevState.options,\r\n-          xaxis: {\r\n-            categories: formattedSalesDate.map((item) => item.x),\r\n-          },\r\n-        },\r\n-\r\n-        series: [\r\n-          { name: \"Sales\", data: formattedSalesDate.map((item) => item.y) },\r\n-        ],\r\n-      }));\r\n-    }\r\n-  }, [salesDetail]);\r\n-\r\n-  return (\r\n-    <>\r\n-      <AdminMenu />\r\n-\r\n-      <section className=\"xl:ml-[4rem] md:ml-[0rem]\">\r\n-        <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n-  <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3 text-white\">\r\n-    ₹\r\n-  </div>\r\n-\r\n-  <p className=\"mt-5 text-white\">Sales</p>\r\n-  <h1 className=\"text-xl font-bold text-white\">\r\n-    ₹ {isLoading ? <Loader /> : sales.totalSales.toFixed(2)}\r\n-  </h1>\r\n-</div>\r\n-\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n-              ₹\r\n-            </div>\r\n-\r\n-            <p className=\"mt-5\">Customers</p>\r\n-            <h1 className=\"text-xl font-bold\">\r\n-              ₹ {isLoading ? <Loader /> : customers?.length}\r\n-            </h1>\r\n-          </div>\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n-              ₹\r\n-            </div>\r\n-\r\n-            <p className=\"mt-5\">All Orders</p>\r\n-            <h1 className=\"text-xl font-bold\">\r\n-              ₹ {isLoading ? <Loader /> : orders?.totalOrders}\r\n-            </h1>\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <div className=\"ml-[10rem] mt-[4rem]\">\r\n-          <Chart\r\n-            options={state.options}\r\n-            series={state.series}\r\n-            type=\"bar\"\r\n-            width=\"70%\"\r\n-          />\r\n-        </div>\r\n-\r\n-        <div className=\"mt-[4rem]\">\r\n-          <OrderList />\r\n-        </div>\r\n-      </section>\r\n-    </>\r\n-  );\r\n-};\r\n-\r\n-export default AdminDashboard;\n-import Chart from 'react-apexcharts'\r\n-import { useGetUsersQuery } from \"../../redux/api/usersApiSlice\";\r\n-import {\r\n-  useGetTotalOrdersQuery,\r\n-  useGetTotalSalesByDateQuery,\r\n-  useGetTotalSalesQuery,\r\n-} from \"../../redux/api/orderApiSlice\";\r\n-\r\n-import { useState, useEffect } from \"react\";\r\n-import AdminMenu from \"./AdminMenu\";\r\n-import OrderList from \"./OrderList\";\r\n-import Loader from \"../../components/Loader\";\r\n-\r\n-const AdminDashboard = () => {\r\n-  const { data: sales, isLoading } = useGetTotalSalesQuery();\r\n-  const { data: customers, isLoading: loading } = useGetUsersQuery();\r\n-  const { data: orders, isLoading: loadingTwo } = useGetTotalOrdersQuery();\r\n-  const { data: salesDetail } = useGetTotalSalesByDateQuery();\r\n-\r\n-  const [state, setState] = useState({\r\n-    options: {\r\n-      chart: {\r\n-        type: \"line\",\r\n-      },\r\n-      tooltip: {\r\n-        theme: \"dark\",\r\n-      },\r\n-      colors: [\"#00E396\"],\r\n-      dataLabels: {\r\n-        enabled: true,\r\n-      },\r\n-      stroke: {\r\n-        curve: \"smooth\",\r\n-      },\r\n-      title: {\r\n-        text: \"Sales Trend\",\r\n-        align: \"left\",\r\n-      },\r\n-      grid: {\r\n-        borderColor: \"#ccc\",\r\n-      },\r\n-      markers: {\r\n-        size: 1,\r\n-      },\r\n-      xaxis: {\r\n-        categories: [],\r\n-        title: {\r\n-          text: \"Date\",\r\n-        },\r\n-      },\r\n-      yaxis: {\r\n-        title: {\r\n-          text: \"Sales\",\r\n-        },\r\n-        min: 0,\r\n-      },\r\n-      legend: {\r\n-        position: \"top\",\r\n-        horizontalAlign: \"right\",\r\n-        floating: true,\r\n-        offsetY: -25,\r\n-        offsetX: -5,\r\n-      },\r\n-    },\r\n-    series: [{ name: \"Sales\", data: [] }],\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (salesDetail) {\r\n-      const formattedSalesDate = salesDetail.map((item) => ({\r\n-        x: item._id,\r\n-        y: item.totalSales,\r\n-      }));\r\n-\r\n-      setState((prevState) => ({\r\n-        ...prevState,\r\n-        options: {\r\n-          ...prevState.options,\r\n-          xaxis: {\r\n-            categories: formattedSalesDate.map((item) => item.x),\r\n-          },\r\n-        },\r\n-\r\n-        series: [\r\n-          { name: \"Sales\", data: formattedSalesDate.map((item) => item.y) },\r\n-        ],\r\n-      }));\r\n-    }\r\n-  }, [salesDetail]);\r\n-\r\n-  return (\r\n-    <>\r\n-      <AdminMenu />\r\n-\r\n-      <section className=\"xl:ml-[4rem] md:ml-[0rem]\">\r\n-        <div className=\"w-[80%] flex justify-around flex-wrap\">\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n-              ₹\r\n-            </div>\r\n-\r\n-            <p className=\"mt-5\">Sales</p>\r\n-           <h1 className=\"text-xl font-bold text-white\">\r\n-  ₹ {isLoading ? <Loader /> : sales.totalSales.toFixed(2)}\r\n-</h1>\r\n-\r\n-          </div>\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n-              ₹\r\n-            </div>\r\n-\r\n-            <p className=\"mt-5\">Customers</p>\r\n-            <h1 className=\"text-xl font-bold\">\r\n-              ₹ {isLoading ? <Loader /> : customers?.length}\r\n-            </h1>\r\n-          </div>\r\n-          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n-            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n-              ₹\r\n-            </div>\r\n-\r\n-            <p className=\"mt-5\">All Orders</p>\r\n-            <h1 className=\"text-xl font-bold\">\r\n-              ₹ {isLoading ? <Loader /> : orders?.totalOrders}\r\n-            </h1>\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <div className=\"ml-[10rem] mt-[4rem]\">\r\n-          <Chart\r\n-            options={state.options}\r\n-            series={state.series}\r\n-            type=\"bar\"\r\n-            width=\"70%\"\r\n-          />\r\n-        </div>\r\n-\r\n-        <div className=\"mt-[4rem]\">\r\n-          <OrderList />\r\n-        </div>\r\n-      </section>\r\n-    </>\r\n-  );\r\n-};\r\n-\r\n export default AdminDashboard;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1750657746590,
            "name": "Commit-0",
            "content": "import Chart from 'react-apexcharts'\r\nimport { useGetUsersQuery } from \"../../redux/api/usersApiSlice\";\r\nimport {\r\n  useGetTotalOrdersQuery,\r\n  useGetTotalSalesByDateQuery,\r\n  useGetTotalSalesQuery,\r\n} from \"../../redux/api/orderApiSlice\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport AdminMenu from \"./AdminMenu\";\r\nimport OrderList from \"./OrderList\";\r\nimport Loader from \"../../components/Loader\";\r\n\r\nconst AdminDashboard = () => {\r\n  const { data: sales, isLoading } = useGetTotalSalesQuery();\r\n  const { data: customers, isLoading: loading } = useGetUsersQuery();\r\n  const { data: orders, isLoading: loadingTwo } = useGetTotalOrdersQuery();\r\n  const { data: salesDetail } = useGetTotalSalesByDateQuery();\r\n\r\n  const [state, setState] = useState({\r\n    options: {\r\n      chart: {\r\n        type: \"line\",\r\n      },\r\n      tooltip: {\r\n        theme: \"dark\",\r\n      },\r\n      colors: [\"#00E396\"],\r\n      dataLabels: {\r\n        enabled: true,\r\n      },\r\n      stroke: {\r\n        curve: \"smooth\",\r\n      },\r\n      title: {\r\n        text: \"Sales Trend\",\r\n        align: \"left\",\r\n      },\r\n      grid: {\r\n        borderColor: \"#ccc\",\r\n      },\r\n      markers: {\r\n        size: 1,\r\n      },\r\n      xaxis: {\r\n        categories: [],\r\n        title: {\r\n          text: \"Date\",\r\n        },\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: \"Sales\",\r\n        },\r\n        min: 0,\r\n      },\r\n      legend: {\r\n        position: \"top\",\r\n        horizontalAlign: \"right\",\r\n        floating: true,\r\n        offsetY: -25,\r\n        offsetX: -5,\r\n      },\r\n    },\r\n    series: [{ name: \"Sales\", data: [] }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (salesDetail) {\r\n      const formattedSalesDate = salesDetail.map((item) => ({\r\n        x: item._id,\r\n        y: item.totalSales,\r\n      }));\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        options: {\r\n          ...prevState.options,\r\n          xaxis: {\r\n            categories: formattedSalesDate.map((item) => item.x),\r\n          },\r\n        },\r\n\r\n        series: [\r\n          { name: \"Sales\", data: formattedSalesDate.map((item) => item.y) },\r\n        ],\r\n      }));\r\n    }\r\n  }, [salesDetail]);\r\n\r\n  return (\r\n    <>\r\n      <AdminMenu />\r\n\r\n      <section className=\"xl:ml-[4rem] md:ml-[0rem]\">\r\n        <div className=\"w-[80%] flex justify-around flex-wrap\">\r\n          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n              ₹\r\n            </div>\r\n\r\n            <p className=\"mt-5\">Sales</p>\r\n            <h1 className=\"text-xl font-bold\">\r\n              ₹ {isLoading ? <Loader /> : sales.totalSales.toFixed(2)}\r\n            </h1>\r\n          </div>\r\n          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n              ₹\r\n            </div>\r\n\r\n            <p className=\"mt-5\">Customers</p>\r\n            <h1 className=\"text-xl font-bold\">\r\n              ₹ {isLoading ? <Loader /> : customers?.length}\r\n            </h1>\r\n          </div>\r\n          <div className=\"rounded-lg bg-black p-5 w-[20rem] mt-5\">\r\n            <div className=\"font-bold rounded-full w-[3rem] bg-pink-500 text-center p-3\">\r\n              $\r\n            </div>\r\n\r\n            <p className=\"mt-5\">All Orders</p>\r\n            <h1 className=\"text-xl font-bold\">\r\n              $ {isLoading ? <Loader /> : orders?.totalOrders}\r\n            </h1>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"ml-[10rem] mt-[4rem]\">\r\n          <Chart\r\n            options={state.options}\r\n            series={state.series}\r\n            type=\"bar\"\r\n            width=\"70%\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mt-[4rem]\">\r\n          <OrderList />\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"
        }
    ]
}
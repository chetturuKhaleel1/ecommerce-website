{
    "sourceFile": "frontend/src/redux/api/orderApiSlice.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1750346595705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750348269670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,13 @@\n     }),\r\n   }),\r\n });\r\n \r\n+\r\n+\r\n+\r\n+\r\n+\r\n export const {\r\n   useGetTotalOrdersQuery,\r\n   useGetTotalSalesQuery,\r\n   useGetTotalSalesByDateQuery,\r\n"
                },
                {
                    "date": 1750348284240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import { apiSlice } from \"./apiSlice\";\r\n+import { ORDERS_URL } from \"../constants\";\r\n+\r\n+export const orderApiSlice = apiSlice.injectEndpoints({\r\n+  endpoints: (builder) => ({\r\n+    createOrder: builder.mutation({\r\n+      query: (order) => ({\r\n+        url: ORDERS_URL,\r\n+        method: \"POST\",\r\n+        body: order,\r\n+      }),\r\n+    }),\r\n+\r\n+    getOrderDetails: builder.query({\r\n+      query: (id) => ({\r\n+        url: `${ORDERS_URL}/${id}`,\r\n+      }),\r\n+    }),\r\n+\r\n+    payOrder: builder.mutation({\r\n+      query: ({ orderId, details }) => ({\r\n+        url: `${ORDERS_URL}/${orderId}/pay`,\r\n+        method: \"PUT\",\r\n+        body: details,\r\n+      }),\r\n+    }),\r\n+\r\n+    getMyOrders: builder.query({\r\n+      query: () => ({\r\n+        url: `${ORDERS_URL}/mine`,\r\n+      }),\r\n+      keepUnusedDataFor: 5,\r\n+    }),\r\n+\r\n+    getOrders: builder.query({\r\n+      query: () => ({\r\n+        url: ORDERS_URL,\r\n+      }),\r\n+    }),\r\n+\r\n+    deliverOrder: builder.mutation({\r\n+      query: (orderId) => ({\r\n+        url: `${ORDERS_URL}/${orderId}/deliver`,\r\n+        method: \"PUT\",\r\n+      }),\r\n+    }),\r\n+\r\n+    getTotalOrders: builder.query({\r\n+      query: () => `${ORDERS_URL}/total-orders`,\r\n+    }),\r\n+\r\n+    getTotalSales: builder.query({\r\n+      query: () => `${ORDERS_URL}/total-sales`,\r\n+    }),\r\n+\r\n+    getTotalSalesByDate: builder.query({\r\n+      query: () => `${ORDERS_URL}/total-sales-by-date`,\r\n+    }),\r\n+  }),\r\n+});\r\n+createRazorpayOrder: builder.mutation({\r\n+  query: (data) => ({\r\n+    url: \"/api/payment/create\",\r\n+    method: \"POST\",\r\n+    body: data,\r\n+  }),\r\n+}),\r\n+\r\n+verifyRazorpayPayment: builder.mutation({\r\n+  query: (data) => ({\r\n+    url: \"/api/payment/verify\",\r\n+    method: \"POST\",\r\n+    body: data,\r\n+  }),\r\n+}),\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+export const {\r\n+  useGetTotalOrdersQuery,\r\n+  useGetTotalSalesQuery,\r\n+  useGetTotalSalesByDateQuery,\r\n+  useCreateOrderMutation,\r\n+  useGetOrderDetailsQuery,\r\n+  usePayOrderMutation,\r\n+  useGetMyOrdersQuery,\r\n+  useDeliverOrderMutation,\r\n+  useGetOrdersQuery,\r\n+  useCreateRazorpayOrderMutation,     // ✅ New\r\n+  useVerifyRazorpayPaymentMutation,   // ✅ New\r\n+} = orderApiSlice;\r\n"
                },
                {
                    "date": 1750348344298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,40 +55,23 @@\n \r\n     getTotalSalesByDate: builder.query({\r\n       query: () => `${ORDERS_URL}/total-sales-by-date`,\r\n     }),\r\n+\r\n+    // ✅ Razorpay endpoints must be inside here:\r\n+    createRazorpayOrder: builder.mutation({\r\n+      query: (data) => ({\r\n+        url: \"/api/payment/create\",\r\n+        method: \"POST\",\r\n+        body: data,\r\n+      }),\r\n+    }),\r\n+\r\n+    verifyRazorpayPayment: builder.mutation({\r\n+      query: (data) => ({\r\n+        url: \"/api/payment/verify\",\r\n+        method: \"POST\",\r\n+        body: data,\r\n+      }),\r\n+    }),\r\n   }),\r\n });\r\n-createRazorpayOrder: builder.mutation({\r\n-  query: (data) => ({\r\n-    url: \"/api/payment/create\",\r\n-    method: \"POST\",\r\n-    body: data,\r\n-  }),\r\n-}),\r\n-\r\n-verifyRazorpayPayment: builder.mutation({\r\n-  query: (data) => ({\r\n-    url: \"/api/payment/verify\",\r\n-    method: \"POST\",\r\n-    body: data,\r\n-  }),\r\n-}),\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-export const {\r\n-  useGetTotalOrdersQuery,\r\n-  useGetTotalSalesQuery,\r\n-  useGetTotalSalesByDateQuery,\r\n-  useCreateOrderMutation,\r\n-  useGetOrderDetailsQuery,\r\n-  usePayOrderMutation,\r\n-  useGetMyOrdersQuery,\r\n-  useDeliverOrderMutation,\r\n-  useGetOrdersQuery,\r\n-  useCreateRazorpayOrderMutation,     // ✅ New\r\n-  useVerifyRazorpayPaymentMutation,   // ✅ New\r\n-} = orderApiSlice;\r\n"
                },
                {
                    "date": 1750348350661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,92 @@\n+import { apiSlice } from \"./apiSlice\";\r\n+import { ORDERS_URL } from \"../constants\";\r\n+\r\n+export const orderApiSlice = apiSlice.injectEndpoints({\r\n+  endpoints: (builder) => ({\r\n+    createOrder: builder.mutation({\r\n+      query: (order) => ({\r\n+        url: ORDERS_URL,\r\n+        method: \"POST\",\r\n+        body: order,\r\n+      }),\r\n+    }),\r\n+\r\n+    getOrderDetails: builder.query({\r\n+      query: (id) => ({\r\n+        url: `${ORDERS_URL}/${id}`,\r\n+      }),\r\n+    }),\r\n+\r\n+    payOrder: builder.mutation({\r\n+      query: ({ orderId, details }) => ({\r\n+        url: `${ORDERS_URL}/${orderId}/pay`,\r\n+        method: \"PUT\",\r\n+        body: details,\r\n+      }),\r\n+    }),\r\n+\r\n+    getMyOrders: builder.query({\r\n+      query: () => ({\r\n+        url: `${ORDERS_URL}/mine`,\r\n+      }),\r\n+      keepUnusedDataFor: 5,\r\n+    }),\r\n+\r\n+    getOrders: builder.query({\r\n+      query: () => ({\r\n+        url: ORDERS_URL,\r\n+      }),\r\n+    }),\r\n+\r\n+    deliverOrder: builder.mutation({\r\n+      query: (orderId) => ({\r\n+        url: `${ORDERS_URL}/${orderId}/deliver`,\r\n+        method: \"PUT\",\r\n+      }),\r\n+    }),\r\n+\r\n+    getTotalOrders: builder.query({\r\n+      query: () => `${ORDERS_URL}/total-orders`,\r\n+    }),\r\n+\r\n+    getTotalSales: builder.query({\r\n+      query: () => `${ORDERS_URL}/total-sales`,\r\n+    }),\r\n+\r\n+    getTotalSalesByDate: builder.query({\r\n+      query: () => `${ORDERS_URL}/total-sales-by-date`,\r\n+    }),\r\n+\r\n+    // ✅ Razorpay endpoints must be inside here:\r\n+    createRazorpayOrder: builder.mutation({\r\n+      query: (data) => ({\r\n+        url: \"/api/payment/create\",\r\n+        method: \"POST\",\r\n+        body: data,\r\n+      }),\r\n+    }),\r\n+\r\n+    verifyRazorpayPayment: builder.mutation({\r\n+      query: (data) => ({\r\n+        url: \"/api/payment/verify\",\r\n+        method: \"POST\",\r\n+        body: data,\r\n+      }),\r\n+    }),\r\n+  }),\r\n+});\r\n+\r\n+\r\n+export const {\r\n+  useGetTotalOrdersQuery,\r\n+  useGetTotalSalesQuery,\r\n+  useGetTotalSalesByDateQuery,\r\n+  useCreateOrderMutation,\r\n+  useGetOrderDetailsQuery,\r\n+  usePayOrderMutation,\r\n+  useGetMyOrdersQuery,\r\n+  useDeliverOrderMutation,\r\n+  useGetOrdersQuery,\r\n+  useCreateRazorpayOrderMutation,\r\n+  useVerifyRazorpayPaymentMutation,\r\n+} = orderApiSlice;\r\n"
                }
            ],
            "date": 1750346595705,
            "name": "Commit-0",
            "content": "import { apiSlice } from \"./apiSlice\";\r\nimport { ORDERS_URL } from \"../constants\";\r\n\r\nexport const orderApiSlice = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    createOrder: builder.mutation({\r\n      query: (order) => ({\r\n        url: ORDERS_URL,\r\n        method: \"POST\",\r\n        body: order,\r\n      }),\r\n    }),\r\n\r\n    getOrderDetails: builder.query({\r\n      query: (id) => ({\r\n        url: `${ORDERS_URL}/${id}`,\r\n      }),\r\n    }),\r\n\r\n    payOrder: builder.mutation({\r\n      query: ({ orderId, details }) => ({\r\n        url: `${ORDERS_URL}/${orderId}/pay`,\r\n        method: \"PUT\",\r\n        body: details,\r\n      }),\r\n    }),\r\n\r\n    getMyOrders: builder.query({\r\n      query: () => ({\r\n        url: `${ORDERS_URL}/mine`,\r\n      }),\r\n      keepUnusedDataFor: 5,\r\n    }),\r\n\r\n    getOrders: builder.query({\r\n      query: () => ({\r\n        url: ORDERS_URL,\r\n      }),\r\n    }),\r\n\r\n    deliverOrder: builder.mutation({\r\n      query: (orderId) => ({\r\n        url: `${ORDERS_URL}/${orderId}/deliver`,\r\n        method: \"PUT\",\r\n      }),\r\n    }),\r\n\r\n    getTotalOrders: builder.query({\r\n      query: () => `${ORDERS_URL}/total-orders`,\r\n    }),\r\n\r\n    getTotalSales: builder.query({\r\n      query: () => `${ORDERS_URL}/total-sales`,\r\n    }),\r\n\r\n    getTotalSalesByDate: builder.query({\r\n      query: () => `${ORDERS_URL}/total-sales-by-date`,\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetTotalOrdersQuery,\r\n  useGetTotalSalesQuery,\r\n  useGetTotalSalesByDateQuery,\r\n  useCreateOrderMutation,\r\n  useGetOrderDetailsQuery,\r\n  usePayOrderMutation,\r\n  useGetMyOrdersQuery,\r\n  useDeliverOrderMutation,\r\n  useGetOrdersQuery,\r\n} = orderApiSlice;\r\n"
        }
    ]
}